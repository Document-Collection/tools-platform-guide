{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"c start template": {
		"prefix": "cstd",
		"scope": "c,cpp",
		"body": [
			"#include <stdio.h>",
			"#include <stdlib.h>",
			"",
			"int main(int argc, char **argv){",
			"	$0",
			"",
			"	return 0;",
			"}"
		],
		"description": "c start template"
	},
	"c++ start template": {
		"prefix": "cppstd",
		"scope": "cpp",
		"body": [
			"#include <iostream>",
			"using namesapce std;",
			"",
			"int main(int argc, char **argv){",
			"	$0",
			"",
			"	return 0;",
			"}"
		],
		"description": "cpp start template"
	},
}